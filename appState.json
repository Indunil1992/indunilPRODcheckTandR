{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "46149a36-e78a-491e-8e4a-65211bb5c431": {
        "id": "46149a36-e78a-491e-8e4a-65211bb5c431",
        "parent": null,
        "name": "indunilPRODcheckTandR",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "4f2152de-c913-457c-a16d-d6d6d8e7d0a8"
        ],
        "isRemovable": false,
        "filePath": "indunilPRODcheckTandR"
      },
      "4f2152de-c913-457c-a16d-d6d6d8e7d0a8": {
        "id": "4f2152de-c913-457c-a16d-d6d6d8e7d0a8",
        "parent": "46149a36-e78a-491e-8e4a-65211bb5c431",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunilPRODcheckTandR/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst ses = new AWS.SES();\n\nexports.handler = function (event, context, callback) {\n\n\n\n    ses.sendEmail({\n        Destination: {\n            ToAddresses: ['indunil@adroitlogic.com'],\n            CcAddresses: [],\n            BccAddresses: []\n        },\n        Message: {\n            Body: {\n                Text: {\n                    Data: 'indunil check test run'\n                }\n            },\n            Subject: {\n                Data: 'SES check by indunil'\n            }\n        },\n        Source: 'indunil@adroitlogic.com',\n    }, function (err, data) {\n        if (err) console.log(err, err.stack); // an error occurred\n\n        else console.log(data);           // successful response\n    });\n\n\n    callback(null, { \"message\": \"Successfully executed\" });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "ddbsample",
            "config": {
              "StartingPosition": "TRIM_HORIZON",
              "BatchSize": "100",
              "StreamViewType": "NEW_IMAGE"
            }
          }
        ]
      }
    },
    "deletedFiles": [],
    "rootNode": "46149a36-e78a-491e-8e4a-65211bb5c431",
    "openFiles": [
      "4f2152de-c913-457c-a16d-d6d6d8e7d0a8"
    ],
    "currentFileId": "4f2152de-c913-457c-a16d-d6d6d8e7d0a8",
    "resources": {
      "ddbsample": {
        "name": "ddbsample",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "table": {
            "arn": "",
            "name": "sample",
            "partitionKey": "123",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "payPerRequest": true,
            "mode": 0
          },
          "isGlobalEditMode": false,
          "parameters": {
            "mode": 0,
            "table": {
              "arn": "",
              "name": "sample",
              "partitionKey": "123",
              "partitionKeyType": "S",
              "hasSortKey": false,
              "sortKey": "",
              "sortKeyType": "S",
              "payPerRequest": true,
              "mode": 0
            },
            "isGlobalEditMode": false,
            "parameters": {
              "mode": 0,
              "table": {
                "arn": "",
                "name": "sample",
                "partitionKey": "123",
                "partitionKeyType": "S",
                "hasSortKey": false,
                "sortKey": "",
                "sortKeyType": "S",
                "payPerRequest": true,
                "mode": 0
              },
              "isGlobalEditMode": false,
              "parameters": {
                "mode": 0,
                "table": {
                  "arn": "",
                  "name": "sampl",
                  "partitionKey": "123",
                  "partitionKeyType": "S",
                  "hasSortKey": false,
                  "sortKey": "",
                  "sortKeyType": "S",
                  "payPerRequest": true,
                  "mode": 0
                },
                "isGlobalEditMode": false,
                "parameters": {
                  "Key": {},
                  "Item": {},
                  "ExpressionAttributeValues": {}
                },
                "triggerParams": {
                  "StartingPosition": "TRIM_HORIZON",
                  "BatchSize": "100",
                  "StreamViewType": "NEW_IMAGE"
                },
                "validator": {
                  "validatableFields": {},
                  "validity": true
                },
                "valid": true,
                "triggerConfig": {
                  "StartingPosition": "TRIM_HORIZON",
                  "BatchSize": "100",
                  "StreamViewType": "NEW_IMAGE"
                },
                "TableName": "sampl"
              },
              "triggerParams": {
                "StartingPosition": "TRIM_HORIZON",
                "BatchSize": "100",
                "StreamViewType": "NEW_IMAGE"
              },
              "validator": {
                "validatableFields": {},
                "validity": true
              },
              "valid": true,
              "triggerConfig": {
                "StartingPosition": "TRIM_HORIZON",
                "BatchSize": "100",
                "StreamViewType": "NEW_IMAGE"
              },
              "TableName": "sample"
            },
            "triggerParams": {
              "StartingPosition": "TRIM_HORIZON",
              "BatchSize": "100",
              "StreamViewType": "NEW_IMAGE"
            },
            "validator": {
              "validatableFields": {},
              "validity": true
            },
            "valid": true,
            "triggerConfig": {
              "StartingPosition": "TRIM_HORIZON",
              "BatchSize": "100",
              "StreamViewType": "NEW_IMAGE"
            },
            "TableName": "sample"
          },
          "triggerParams": {
            "StartingPosition": "TRIM_HORIZON",
            "BatchSize": "100",
            "StreamViewType": "NEW_IMAGE"
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        }
      },
      "ses-indunil@adroitlogic.com": {
        "name": "ses-indunil@adroitlogic.com",
        "type": "SES",
        "config": {
          "selectedIdentity": "indunil@adroitlogic.com",
          "projectRegion": "us-east-1",
          "params": {
            "to": "indunil@adroitlogic.com",
            "cc": "",
            "bcc": "",
            "subject": "SES check by indunil",
            "body": {
              "text": "indunil check test run",
              "html": ""
            }
          }
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "indunilPRODcheckTandR",
    "projectDescription": "checkTandR",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1562246523030
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "indunilPRODcheckTandR",
      "url": "https://github.com/Indunil1992/indunilPRODcheckTandR"
    }
  }
}